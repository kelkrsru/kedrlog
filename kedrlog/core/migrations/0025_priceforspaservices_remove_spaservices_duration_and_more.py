# Generated by Django 4.2.4 on 2023-12-16 08:39

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0024_spaservices'),
    ]

    operations = [
        migrations.CreateModel(
            name='PriceForSpaServices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated', models.DateField(auto_now=True, verbose_name='Дата изменения')),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Цена')),
                ('min_guest', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1, 'Количество человек не может быть меньше 0 или 0')], verbose_name='Минимальное количество человек')),
                ('max_guest', models.PositiveSmallIntegerField(verbose_name='Максимальное количество человек')),
                ('duration', models.PositiveSmallIntegerField(help_text='Продолжительность программы парения в минутах', verbose_name='Продолжительность, мин.')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='spaservices',
            name='duration',
        ),
        migrations.RemoveField(
            model_name='spaservices',
            name='measure',
        ),
        migrations.AlterField(
            model_name='reserve',
            name='count_guests',
            field=models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1, 'Количество человек не может быть меньше 0 или 0')], verbose_name='Количество человек'),
        ),
        migrations.RemoveField(
            model_name='spaservices',
            name='price',
        ),
        migrations.AddField(
            model_name='spaservices',
            name='price',
            field=models.ManyToManyField(blank=True, related_name='price_spa_services', to='core.priceforspaservices', verbose_name='Цена'),
        ),
    ]
